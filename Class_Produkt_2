class Produkt
	@categories[]
	@error = "Error!"

	search_n(x,y[])
		y.each do |i|
			if x == y[i]
				return i
			end
		end
		return "Error szukana wartosc nie istnieje!"
	end

	def did_exist(arra[],n)
		arra.each do |x|
			if arra[x] == n
				return true
			end
		end
		return false
	end

	def did_in_catego(name_of_p,name_of_k)
		for name_of_k.arra.each do |i|
			if name_of_k.arra[i].name == name_of_p
				return true
			end
		end
		return false
	end

	def add_categories(catego)
		@categories.push(catego = {	"name" => catego,
						"arra" => []})
	end

	def add_produkt(catego,name_of_p,amount_of_p)
		catego_n = search_n(catego,@categories)
		if did_exist(@categories[catego_n.arra[]],name_of_p) == true
			pro_n = search(name_of_p,@categories[catego_n].arra)
			@categories[catego_n].arra[pro_n].amount += amount_of_p
		else
			@categories[search_n(catego,@categories)].arra.push = {	"name" => name_of_p,
										"amount" => amount_of_p}
		end
	end

	def add_categories(nazwa)
		if did_i(@categories,nazwa)
			puts "kategoegoria o tej nazwie juz istnieje!"
		else
			@categories.push(nazwa)
		end
	end
	def rm_categories(name_of_k)
		@categoegorje.delete_at(search_n(name_of_k,@categories))
	end

	def rm_produkt(name_of_p,name_of_k)
		catego_n = search_n(name_of_k,@categories)
		pro_n = search_n(name_of_k,@categories[catego_n].arra)
		@categories[catego_n].arra.delete_at(pro_n)
	end

	def show
		for @categories.each do |x|
			print "\n#{@categories[x].name}"
			for @categories[x].arra.each do |i|
				print @categories[x].arra[i].name
				print @categories[x].arra[i].amount
			end
		end
	end

end
